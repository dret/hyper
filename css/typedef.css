body {
  font-family: 'Open Sans', sans-serif;

  font-weight: 300;
  line-height: 1.6;
  /* letter-spacing: .04em; */

  font-size: 16px;
  color: #302C25;
}

a {
  font-weight: normal;
}

li, dt, dd {
}

h1, h2, h3, h4, h5, h6 {
    /* font-family: Georgia; */
}
h1, h2, h3, h4, h5 {
  font-family: 'Open Sans', sans-serif;
  color:#1E1E1E;
}

.container h4 {
    margin-top: 1.5em;
}

h5 {
    font-size: 16px;
}

h6 {
    color: #959592;
    font-size: 16px;
}


div#rfc-shoulds {
  display: block;
  border: 1px black solid;
  background-color: #e0e0e0;
  padding: .7em;
  margin-left: 30px;
  margin-right: 30px;
}

blockquote{
  font-size: 1.4em;
  width:80%;
  margin:30px auto;
  font-family:Open Sans;
  font-style:italic;
  color: #555555;
  padding:1.2em 30px 1.2em 75px;
  border-left:8px solid #78C0A8 ;
  line-height:1.6;
  position: relative;
  background:#EDEDED;
}

blockquote::before{
  font-family:Arial;
  content: "\201C";
  color:#78C0A8;
  font-size:4em;
  position: absolute;
  left: 10px;
  top:-10px;
}

blockquote::after{
  content: '';
}

blockquote span{
  display:block;
  color:#333333;
  font-style: normal;
  font-weight: bold;
  margin-top:1em;
}


dd {
  display: block;
  margin-left: 30px;
}

span.reg-draft {
    background: orange;
    color: white;
    padding: 2px 4px;
}

span.reg-approved, span.reg-approved a {
    background: green;
    color: white;
    padding: 2px 4px;
}

span.reg-approved a {
  text-decoration: underline;
}

/*
 Section and list styling:
 Source: https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Counters
*/
h2 + h3,
h2 + *:not(h3) + h2,
h2 + *:not(h3) + *:not(h3) + h2,
h2 + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + h2,
h2 + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + h2,
h2 + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + h2,
h2 + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + *:not(h3) + h2 {
  counter-reset: section_h3;
}

h3 + h4,
h3 + *:not(h4) + h4,
h3 + *:not(h4) + *:not(h4) + h4,
h3 + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + h4,
h3 + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + h4,
h3 + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + h4,
h3 + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + *:not(h4) + h4 {
  /* color: red; */ /* for debugging */
  counter-reset: section_h4;
}

h4 + h5,
h4 + *:not(h5) + h5,
h4 + *:not(h5) + *:not(h5) + h4,
h4 + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + h5,
h4 + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + h5,
h4 + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + h5,
h4 + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + *:not(h5) + h5 {
  /* color: red; */ /* for debugging */
  counter-reset: section_h5;
}

/** Note: unfortunately the "counters" function doesn't seem to work properly for H tags, only lists */
h3:before  {
  counter-increment: section_h3;      /* Increment the section counter */
  content: "ยง" counter(section_h3) ". "; /* Display the counter */
}

h4:before  {
  counter-increment: section_h4;      /* Increment the section counter */
  content: "ยง" counter(section_h3) "." counter(section_h4) ". "; /* Display the counter */
}

h5:before  {
  counter-increment: section_h5;      /* Increment the section counter */
  content: "ยง" counter(section_h3) "." counter(section_h4) "." counter(section_h5) ". "; /* Display the counter */
}

#toc_parent ol {
  counter-reset: toc;
  list-style-type: none;
}
#toc_parent li:before {
  counter-increment: toc;
  content: counters(toc, ".") ". ";   /* Adds the value of all instances
                                            of the section counter separated
                                            by a ".". */
}
